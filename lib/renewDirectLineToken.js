"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

async function _default(token) {
  console.log(`Renewing Direct Line token using token "${token.substr(0, 3)}...${token.substr(-3)}"`);
  let cres;
  cres = await fetch('https://directline.botframework.com/v3/directline/tokens/refresh', {
    headers: {
      authorization: `Bearer ${token}`,
      'Content-Type': 'application/json'
    },
    method: 'POST'
  });

  if (cres.status === 200) {
    const json = await cres.json();

    if ('error' in json) {
      throw new Error(`Direct Line service responded ${JSON.stringify(json.error)} while renewing token`);
    } else {
      return json;
    }
  } else {
    throw new Error(`Direct Line service returned ${cres.status} while renewing token`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZW5ld0RpcmVjdExpbmVUb2tlbi5qcyJdLCJuYW1lcyI6WyJ0b2tlbiIsImNvbnNvbGUiLCJsb2ciLCJzdWJzdHIiLCJjcmVzIiwiZmV0Y2giLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFlLHdCQUFnQkEsS0FBaEIsRUFBdUI7QUFDcENDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDJDQUEyQ0YsS0FBSyxDQUFDRyxNQUFOLENBQWEsQ0FBYixFQUFnQixDQUFoQixDQUFvQixNQUFNSCxLQUFLLENBQUNHLE1BQU4sQ0FBYSxDQUFDLENBQWQsQ0FBa0IsR0FBcEc7QUFFQSxNQUFJQyxJQUFKO0FBRUFBLEVBQUFBLElBQUksR0FBRyxNQUFNQyxLQUFLLENBQUMsa0VBQUQsRUFBcUU7QUFDckZDLElBQUFBLE9BQU8sRUFBRTtBQUNQQyxNQUFBQSxhQUFhLEVBQUcsVUFBVVAsS0FBTyxFQUQxQjtBQUVQLHNCQUFnQjtBQUZULEtBRDRFO0FBS3JGUSxJQUFBQSxNQUFNLEVBQUU7QUFMNkUsR0FBckUsQ0FBbEI7O0FBUUEsTUFBSUosSUFBSSxDQUFDSyxNQUFMLEtBQWdCLEdBQXBCLEVBQXlCO0FBQ3ZCLFVBQU1DLElBQUksR0FBRyxNQUFNTixJQUFJLENBQUNNLElBQUwsRUFBbkI7O0FBRUEsUUFBSSxXQUFXQSxJQUFmLEVBQXFCO0FBQ25CLFlBQU0sSUFBSUMsS0FBSixDQUFXLGlDQUFpQ0MsSUFBSSxDQUFDQyxTQUFMLENBQWVILElBQUksQ0FBQ0ksS0FBcEIsQ0FBNEIsdUJBQXhFLENBQU47QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPSixJQUFQO0FBQ0Q7QUFDRixHQVJELE1BUU87QUFDTCxVQUFNLElBQUlDLEtBQUosQ0FBVyxnQ0FBZ0NQLElBQUksQ0FBQ0ssTUFBUSx1QkFBeEQsQ0FBTjtBQUNEO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAodG9rZW4pIHtcbiAgY29uc29sZS5sb2coYFJlbmV3aW5nIERpcmVjdCBMaW5lIHRva2VuIHVzaW5nIHRva2VuIFwiJHsgdG9rZW4uc3Vic3RyKDAsIDMpIH0uLi4keyB0b2tlbi5zdWJzdHIoLTMpIH1cImApO1xuXG4gIGxldCBjcmVzO1xuXG4gIGNyZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9kaXJlY3RsaW5lLmJvdGZyYW1ld29yay5jb20vdjMvZGlyZWN0bGluZS90b2tlbnMvcmVmcmVzaCcsIHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICBhdXRob3JpemF0aW9uOiBgQmVhcmVyICR7IHRva2VuIH1gLFxuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH0sXG4gICAgbWV0aG9kOiAnUE9TVCdcbiAgfSk7XG5cbiAgaWYgKGNyZXMuc3RhdHVzID09PSAyMDApIHtcbiAgICBjb25zdCBqc29uID0gYXdhaXQgY3Jlcy5qc29uKCk7XG5cbiAgICBpZiAoJ2Vycm9yJyBpbiBqc29uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYERpcmVjdCBMaW5lIHNlcnZpY2UgcmVzcG9uZGVkICR7IEpTT04uc3RyaW5naWZ5KGpzb24uZXJyb3IpIH0gd2hpbGUgcmVuZXdpbmcgdG9rZW5gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgRGlyZWN0IExpbmUgc2VydmljZSByZXR1cm5lZCAkeyBjcmVzLnN0YXR1cyB9IHdoaWxlIHJlbmV3aW5nIHRva2VuYCk7XG4gIH1cbn1cbiJdfQ==