"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = () => ({
  "$schema": "https://microsoft.github.io/AdaptiveCards/schemas/adaptive-card.json",
  "version": "1.0",
  "type": "AdaptiveCard",
  "body": [{
    "type": "Container",
    "items": [{
      "type": "TextBlock",
      "size": "Small",
      "weight": "Lighter",
      "text": "Alarm"
    }]
  }, {
    "type": "Container",
    "items": [{
      "type": "TextBlock",
      "size": "Large",
      "text": "Breakfast",
      "wrap": true
    }]
  }, {
    "type": "TextBlock",
    "size": "Large",
    "weight": "Bolder",
    "text": "10:00 AM"
  }, {
    "type": "Container",
    "items": [{
      "type": "TextBlock",
      "size": "Small",
      "weight": "Lighter",
      "text": "Snooze for"
    }, {
      "id": "time",
      "type": "Input.ChoiceSet",
      "value": "10m",
      "placeholder": "Placeholder text",
      "choices": [{
        "title": "10 minutes",
        "value": "10m"
      }, {
        "title": "30 minutes",
        "value": "30m"
      }]
    }]
  }],
  "actions": [{
    "type": "Action.Submit",
    "title": "Snooze"
  }, {
    "type": "Action.Submit",
    "title": "Dismiss"
  }]
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9DYXJkcy9CcmVha2Zhc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztlQUFlLE9BQU87QUFDbEIsYUFBVyxzRUFETztBQUVsQixhQUFXLEtBRk87QUFHbEIsVUFBUSxjQUhVO0FBSWxCLFVBQVEsQ0FDSjtBQUNJLFlBQVEsV0FEWjtBQUVJLGFBQVMsQ0FDTDtBQUNJLGNBQVEsV0FEWjtBQUVJLGNBQVEsT0FGWjtBQUdJLGdCQUFVLFNBSGQ7QUFJSSxjQUFRO0FBSlosS0FESztBQUZiLEdBREksRUFZSjtBQUNJLFlBQVEsV0FEWjtBQUVJLGFBQVMsQ0FDTDtBQUNJLGNBQVEsV0FEWjtBQUVJLGNBQVEsT0FGWjtBQUdJLGNBQVEsV0FIWjtBQUlJLGNBQVE7QUFKWixLQURLO0FBRmIsR0FaSSxFQXVCSjtBQUNJLFlBQVEsV0FEWjtBQUVJLFlBQVEsT0FGWjtBQUdJLGNBQVUsUUFIZDtBQUlJLFlBQVE7QUFKWixHQXZCSSxFQTZCSjtBQUNJLFlBQVEsV0FEWjtBQUVJLGFBQVMsQ0FDTDtBQUNJLGNBQVEsV0FEWjtBQUVJLGNBQVEsT0FGWjtBQUdJLGdCQUFVLFNBSGQ7QUFJSSxjQUFRO0FBSlosS0FESyxFQU9MO0FBQ0ksWUFBTSxNQURWO0FBRUksY0FBUSxpQkFGWjtBQUdJLGVBQVMsS0FIYjtBQUlJLHFCQUFlLGtCQUpuQjtBQUtJLGlCQUFXLENBQ1A7QUFDSSxpQkFBUyxZQURiO0FBRUksaUJBQVM7QUFGYixPQURPLEVBS1A7QUFDSSxpQkFBUyxZQURiO0FBRUksaUJBQVM7QUFGYixPQUxPO0FBTGYsS0FQSztBQUZiLEdBN0JJLENBSlU7QUE2RGxCLGFBQVcsQ0FDUDtBQUNJLFlBQVEsZUFEWjtBQUVJLGFBQVM7QUFGYixHQURPLEVBS1A7QUFDSSxZQUFRLGVBRFo7QUFFSSxhQUFTO0FBRmIsR0FMTztBQTdETyxDQUFQLEMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoKSA9PiAoe1xuICAgIFwiJHNjaGVtYVwiOiBcImh0dHBzOi8vbWljcm9zb2Z0LmdpdGh1Yi5pby9BZGFwdGl2ZUNhcmRzL3NjaGVtYXMvYWRhcHRpdmUtY2FyZC5qc29uXCIsXG4gICAgXCJ2ZXJzaW9uXCI6IFwiMS4wXCIsXG4gICAgXCJ0eXBlXCI6IFwiQWRhcHRpdmVDYXJkXCIsXG4gICAgXCJib2R5XCI6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJ0eXBlXCI6IFwiQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcIml0ZW1zXCI6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcIlRleHRCbG9ja1wiLFxuICAgICAgICAgICAgICAgICAgICBcInNpemVcIjogXCJTbWFsbFwiLFxuICAgICAgICAgICAgICAgICAgICBcIndlaWdodFwiOiBcIkxpZ2h0ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgXCJ0ZXh0XCI6IFwiQWxhcm1cIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJ0eXBlXCI6IFwiQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcIml0ZW1zXCI6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcIlRleHRCbG9ja1wiLFxuICAgICAgICAgICAgICAgICAgICBcInNpemVcIjogXCJMYXJnZVwiLFxuICAgICAgICAgICAgICAgICAgICBcInRleHRcIjogXCJCcmVha2Zhc3RcIixcbiAgICAgICAgICAgICAgICAgICAgXCJ3cmFwXCI6IHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidHlwZVwiOiBcIlRleHRCbG9ja1wiLFxuICAgICAgICAgICAgXCJzaXplXCI6IFwiTGFyZ2VcIixcbiAgICAgICAgICAgIFwid2VpZ2h0XCI6IFwiQm9sZGVyXCIsXG4gICAgICAgICAgICBcInRleHRcIjogXCIxMDowMCBBTVwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidHlwZVwiOiBcIkNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJpdGVtc1wiOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJUZXh0QmxvY2tcIixcbiAgICAgICAgICAgICAgICAgICAgXCJzaXplXCI6IFwiU21hbGxcIixcbiAgICAgICAgICAgICAgICAgICAgXCJ3ZWlnaHRcIjogXCJMaWdodGVyXCIsXG4gICAgICAgICAgICAgICAgICAgIFwidGV4dFwiOiBcIlNub296ZSBmb3JcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwidGltZVwiLFxuICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJJbnB1dC5DaG9pY2VTZXRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJ2YWx1ZVwiOiBcIjEwbVwiLFxuICAgICAgICAgICAgICAgICAgICBcInBsYWNlaG9sZGVyXCI6IFwiUGxhY2Vob2xkZXIgdGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICBcImNob2ljZXNcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMCBtaW51dGVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ2YWx1ZVwiOiBcIjEwbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIzMCBtaW51dGVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ2YWx1ZVwiOiBcIjMwbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICBdLFxuICAgIFwiYWN0aW9uc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidHlwZVwiOiBcIkFjdGlvbi5TdWJtaXRcIixcbiAgICAgICAgICAgIFwidGl0bGVcIjogXCJTbm9vemVcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcInR5cGVcIjogXCJBY3Rpb24uU3VibWl0XCIsXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiRGlzbWlzc1wiXG4gICAgICAgIH1cbiAgICBdXG59KVxuIl19