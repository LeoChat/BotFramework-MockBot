"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.help = help;
exports.processor = processor;
exports.name = void 0;
const name = 'Images on emulated slow network';
exports.name = name;

function help() {
  return {
    'slow': 'Show 4 images with emulated slow network'
  };
}

async function processor(context, ...args) {
  const {
    PUBLIC_URL
  } = process.env;
  const arg = (args[0] || '').trim();

  if (arg === 'markdown') {
    await context.sendActivity(['This Markdown text contains few images with emulated slow network.', '', `![Photo 1](${PUBLIC_URL}assets/surface1.jpg?slow)`, '', `![Photo 2](${PUBLIC_URL}assets/surface2.jpg?slow)`, '', `![Photo 3](${PUBLIC_URL}assets/surface3.jpg?slow)`, '', `![Photo 4](${PUBLIC_URL}assets/surface4.jpg?slow)`].join('\n'));
  } else {
    const {
      PUBLIC_URL
    } = process.env;
    const arg = args.map(arg => (arg || '').trim()).filter(arg => arg).join(' ');

    switch (arg) {
      case 'carousel':
      default:
        await context.sendActivity({
          type: 'message',
          text: 'This command will slowly show 4 images in carousel',
          attachmentLayout: 'carousel',
          attachments: [{
            contentType: 'image/jpg',
            contentUrl: `${PUBLIC_URL}assets/surface1.jpg?slow`,
            name: 'Microsoft Surface Front View'
          }, {
            contentType: 'image/jpg',
            contentUrl: `${PUBLIC_URL}assets/surface2.jpg?slow`,
            name: 'Microsoft Surface Back View'
          }, {
            contentType: 'image/jpg',
            contentUrl: `${PUBLIC_URL}assets/surface3.jpg?slow`,
            name: 'Microsoft Surface Side Zoom'
          }, {
            contentType: 'image/jpg',
            contentUrl: `${PUBLIC_URL}assets/surface4.jpg?slow`,
            name: 'Microsoft Surface Keyboard Zoom'
          }]
        });
        break;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9TbG93LnRzIl0sIm5hbWVzIjpbIm5hbWUiLCJoZWxwIiwicHJvY2Vzc29yIiwiY29udGV4dCIsImFyZ3MiLCJQVUJMSUNfVVJMIiwicHJvY2VzcyIsImVudiIsImFyZyIsInRyaW0iLCJzZW5kQWN0aXZpdHkiLCJqb2luIiwibWFwIiwiZmlsdGVyIiwidHlwZSIsInRleHQiLCJhdHRhY2htZW50TGF5b3V0IiwiYXR0YWNobWVudHMiLCJjb250ZW50VHlwZSIsImNvbnRlbnRVcmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUEsTUFBTUEsSUFBSSxHQUFHLGlDQUFiOzs7QUFFQSxTQUFTQyxJQUFULEdBQWdCO0FBQ2QsU0FBTztBQUNMLFlBQVE7QUFESCxHQUFQO0FBR0Q7O0FBRUQsZUFBZUMsU0FBZixDQUF5QkMsT0FBekIsRUFBK0MsR0FBR0MsSUFBbEQsRUFBa0U7QUFDaEUsUUFBTTtBQUFFQyxJQUFBQTtBQUFGLE1BQWlCQyxPQUFPLENBQUNDLEdBQS9CO0FBQ0EsUUFBTUMsR0FBRyxHQUFHLENBQUNKLElBQUksQ0FBQyxDQUFELENBQUosSUFBVyxFQUFaLEVBQWdCSyxJQUFoQixFQUFaOztBQUVBLE1BQUlELEdBQUcsS0FBSyxVQUFaLEVBQXdCO0FBQ3RCLFVBQU1MLE9BQU8sQ0FBQ08sWUFBUixDQUFxQixDQUN6QixvRUFEeUIsRUFFekIsRUFGeUIsRUFHeEIsY0FBY0wsVUFBWSwyQkFIRixFQUl6QixFQUp5QixFQUt4QixjQUFjQSxVQUFZLDJCQUxGLEVBTXpCLEVBTnlCLEVBT3hCLGNBQWNBLFVBQVksMkJBUEYsRUFRekIsRUFSeUIsRUFTeEIsY0FBY0EsVUFBWSwyQkFURixFQVV6Qk0sSUFWeUIsQ0FVcEIsSUFWb0IsQ0FBckIsQ0FBTjtBQVdELEdBWkQsTUFZTztBQUNMLFVBQU07QUFBRU4sTUFBQUE7QUFBRixRQUFpQkMsT0FBTyxDQUFDQyxHQUEvQjtBQUNBLFVBQU1DLEdBQUcsR0FBR0osSUFBSSxDQUFDUSxHQUFMLENBQVNKLEdBQUcsSUFBSSxDQUFDQSxHQUFHLElBQUksRUFBUixFQUFZQyxJQUFaLEVBQWhCLEVBQW9DSSxNQUFwQyxDQUEyQ0wsR0FBRyxJQUFJQSxHQUFsRCxFQUF1REcsSUFBdkQsQ0FBNEQsR0FBNUQsQ0FBWjs7QUFFQSxZQUFRSCxHQUFSO0FBQ0UsV0FBSyxVQUFMO0FBQ0E7QUFDRSxjQUFNTCxPQUFPLENBQUNPLFlBQVIsQ0FBcUI7QUFDekJJLFVBQUFBLElBQUksRUFBRSxTQURtQjtBQUV6QkMsVUFBQUEsSUFBSSxFQUFFLG9EQUZtQjtBQUd6QkMsVUFBQUEsZ0JBQWdCLEVBQUUsVUFITztBQUl6QkMsVUFBQUEsV0FBVyxFQUFFLENBQUM7QUFDWkMsWUFBQUEsV0FBVyxFQUFFLFdBREQ7QUFFWkMsWUFBQUEsVUFBVSxFQUFHLEdBQUdkLFVBQVksMEJBRmhCO0FBR1pMLFlBQUFBLElBQUksRUFBRTtBQUhNLFdBQUQsRUFJVjtBQUNEa0IsWUFBQUEsV0FBVyxFQUFFLFdBRFo7QUFFREMsWUFBQUEsVUFBVSxFQUFHLEdBQUdkLFVBQVksMEJBRjNCO0FBR0RMLFlBQUFBLElBQUksRUFBRTtBQUhMLFdBSlUsRUFRVjtBQUNEa0IsWUFBQUEsV0FBVyxFQUFFLFdBRFo7QUFFREMsWUFBQUEsVUFBVSxFQUFHLEdBQUdkLFVBQVksMEJBRjNCO0FBR0RMLFlBQUFBLElBQUksRUFBRTtBQUhMLFdBUlUsRUFZVjtBQUNEa0IsWUFBQUEsV0FBVyxFQUFFLFdBRFo7QUFFREMsWUFBQUEsVUFBVSxFQUFHLEdBQUdkLFVBQVksMEJBRjNCO0FBR0RMLFlBQUFBLElBQUksRUFBRTtBQUhMLFdBWlU7QUFKWSxTQUFyQixDQUFOO0FBdUJBO0FBMUJKO0FBNEJEO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUdXJuQ29udGV4dCB9IGZyb20gJ2JvdGJ1aWxkZXInO1xuXG5jb25zdCBuYW1lID0gJ0ltYWdlcyBvbiBlbXVsYXRlZCBzbG93IG5ldHdvcmsnO1xuXG5mdW5jdGlvbiBoZWxwKCkge1xuICByZXR1cm4ge1xuICAgICdzbG93JzogJ1Nob3cgNCBpbWFnZXMgd2l0aCBlbXVsYXRlZCBzbG93IG5ldHdvcmsnXG4gIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHByb2Nlc3Nvcihjb250ZXh0OiBUdXJuQ29udGV4dCwgLi4uYXJnczogc3RyaW5nW10pIHtcbiAgY29uc3QgeyBQVUJMSUNfVVJMIH0gPSBwcm9jZXNzLmVudjtcbiAgY29uc3QgYXJnID0gKGFyZ3NbMF0gfHwgJycpLnRyaW0oKTtcblxuICBpZiAoYXJnID09PSAnbWFya2Rvd24nKSB7XG4gICAgYXdhaXQgY29udGV4dC5zZW5kQWN0aXZpdHkoW1xuICAgICAgJ1RoaXMgTWFya2Rvd24gdGV4dCBjb250YWlucyBmZXcgaW1hZ2VzIHdpdGggZW11bGF0ZWQgc2xvdyBuZXR3b3JrLicsXG4gICAgICAnJyxcbiAgICAgIGAhW1Bob3RvIDFdKCR7IFBVQkxJQ19VUkwgfWFzc2V0cy9zdXJmYWNlMS5qcGc/c2xvdylgLFxuICAgICAgJycsXG4gICAgICBgIVtQaG90byAyXSgkeyBQVUJMSUNfVVJMIH1hc3NldHMvc3VyZmFjZTIuanBnP3Nsb3cpYCxcbiAgICAgICcnLFxuICAgICAgYCFbUGhvdG8gM10oJHsgUFVCTElDX1VSTCB9YXNzZXRzL3N1cmZhY2UzLmpwZz9zbG93KWAsXG4gICAgICAnJyxcbiAgICAgIGAhW1Bob3RvIDRdKCR7IFBVQkxJQ19VUkwgfWFzc2V0cy9zdXJmYWNlNC5qcGc/c2xvdylgXG4gICAgXS5qb2luKCdcXG4nKSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgeyBQVUJMSUNfVVJMIH0gPSBwcm9jZXNzLmVudjtcbiAgICBjb25zdCBhcmcgPSBhcmdzLm1hcChhcmcgPT4gKGFyZyB8fCAnJykudHJpbSgpKS5maWx0ZXIoYXJnID0+IGFyZykuam9pbignICcpO1xuXG4gICAgc3dpdGNoIChhcmcpIHtcbiAgICAgIGNhc2UgJ2Nhcm91c2VsJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGF3YWl0IGNvbnRleHQuc2VuZEFjdGl2aXR5KHtcbiAgICAgICAgICB0eXBlOiAnbWVzc2FnZScsXG4gICAgICAgICAgdGV4dDogJ1RoaXMgY29tbWFuZCB3aWxsIHNsb3dseSBzaG93IDQgaW1hZ2VzIGluIGNhcm91c2VsJyxcbiAgICAgICAgICBhdHRhY2htZW50TGF5b3V0OiAnY2Fyb3VzZWwnLFxuICAgICAgICAgIGF0dGFjaG1lbnRzOiBbe1xuICAgICAgICAgICAgY29udGVudFR5cGU6ICdpbWFnZS9qcGcnLFxuICAgICAgICAgICAgY29udGVudFVybDogYCR7IFBVQkxJQ19VUkwgfWFzc2V0cy9zdXJmYWNlMS5qcGc/c2xvd2AsXG4gICAgICAgICAgICBuYW1lOiAnTWljcm9zb2Z0IFN1cmZhY2UgRnJvbnQgVmlldydcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBjb250ZW50VHlwZTogJ2ltYWdlL2pwZycsXG4gICAgICAgICAgICBjb250ZW50VXJsOiBgJHsgUFVCTElDX1VSTCB9YXNzZXRzL3N1cmZhY2UyLmpwZz9zbG93YCxcbiAgICAgICAgICAgIG5hbWU6ICdNaWNyb3NvZnQgU3VyZmFjZSBCYWNrIFZpZXcnXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgY29udGVudFR5cGU6ICdpbWFnZS9qcGcnLFxuICAgICAgICAgICAgY29udGVudFVybDogYCR7IFBVQkxJQ19VUkwgfWFzc2V0cy9zdXJmYWNlMy5qcGc/c2xvd2AsXG4gICAgICAgICAgICBuYW1lOiAnTWljcm9zb2Z0IFN1cmZhY2UgU2lkZSBab29tJ1xuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnaW1hZ2UvanBnJyxcbiAgICAgICAgICAgIGNvbnRlbnRVcmw6IGAkeyBQVUJMSUNfVVJMIH1hc3NldHMvc3VyZmFjZTQuanBnP3Nsb3dgLFxuICAgICAgICAgICAgbmFtZTogJ01pY3Jvc29mdCBTdXJmYWNlIEtleWJvYXJkIFpvb20nXG4gICAgICAgICAgfV1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IGhlbHAsIG5hbWUsIHByb2Nlc3NvciB9XG4iXX0=