"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.help = help;
exports.processor = processor;
exports.name = void 0;
const name = 'Multiple media attachments';
exports.name = name;

function help() {
  return {
    'content-multimedia': 'Show animation, audio, and video attachments in a single message'
  };
}

async function processor(context) {
  const {
    PUBLIC_URL
  } = process.env;
  await context.sendActivity({
    type: 'message',
    attachments: [{
      contentType: 'application/vnd.microsoft.card.animation',
      content: {
        title: 'Multimedia Content',
        subtitle: 'Subtitle',
        text: 'Text',
        media: [{
          url: `${PUBLIC_URL}assets/surface_anim.gif`,
          profile: 'animation'
        }, {
          url: `${PUBLIC_URL}assets/surface_anim.gif`,
          profile: 'animation2'
        }],
        autoloop: true,
        autostart: true
      }
    }, {
      contentType: 'application/vnd.microsoft.card.audio',
      content: {
        title: 'BotFramework Test',
        subtitle: 'audio test',
        text: 'No buttons, No Image, Autoloop, Sharable',
        media: [{
          url: `${PUBLIC_URL}assets/bftest.mp3`,
          profile: 'audiocard'
        }, {
          url: `${PUBLIC_URL}assets/bftest.mp3`,
          profile: 'audiocard2'
        }],
        autoloop: true,
        autostart: false
      }
    }, {
      contentType: 'application/vnd.microsoft.card.video',
      content: {
        title: 'Microsoft Band',
        subtitle: 'Large Video',
        text: 'No buttons, No Image, Autoloop, No Sharable',
        media: [{
          url: `${PUBLIC_URL}assets/msband.mp4`,
          profile: 'videocard'
        }, {
          url: `${PUBLIC_URL}assets/msband.mp4`,
          profile: 'videocard2'
        }],
        image: {
          url: `${PUBLIC_URL}assets/ms-band1.jpg`
        },
        autoloop: true,
        autostart: false
      }
    }]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9NdWx0aW1lZGlhQ2FyZC50cyJdLCJuYW1lcyI6WyJuYW1lIiwiaGVscCIsInByb2Nlc3NvciIsImNvbnRleHQiLCJQVUJMSUNfVVJMIiwicHJvY2VzcyIsImVudiIsInNlbmRBY3Rpdml0eSIsInR5cGUiLCJhdHRhY2htZW50cyIsImNvbnRlbnRUeXBlIiwiY29udGVudCIsInRpdGxlIiwic3VidGl0bGUiLCJ0ZXh0IiwibWVkaWEiLCJ1cmwiLCJwcm9maWxlIiwiYXV0b2xvb3AiLCJhdXRvc3RhcnQiLCJpbWFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUcsNEJBQWI7OztBQUVBLFNBQVNDLElBQVQsR0FBZ0I7QUFDZCxTQUFPO0FBQ0wsMEJBQXNCO0FBRGpCLEdBQVA7QUFHRDs7QUFFRCxlQUFlQyxTQUFmLENBQXlCQyxPQUF6QixFQUErQztBQUM3QyxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBaUJDLE9BQU8sQ0FBQ0MsR0FBL0I7QUFFQSxRQUFNSCxPQUFPLENBQUNJLFlBQVIsQ0FBcUI7QUFDekJDLElBQUFBLElBQUksRUFBRSxTQURtQjtBQUV6QkMsSUFBQUEsV0FBVyxFQUFFLENBQUM7QUFDWkMsTUFBQUEsV0FBVyxFQUFFLDBDQUREO0FBRVpDLE1BQUFBLE9BQU8sRUFBRTtBQUNQQyxRQUFBQSxLQUFLLEVBQUUsb0JBREE7QUFFUEMsUUFBQUEsUUFBUSxFQUFFLFVBRkg7QUFHUEMsUUFBQUEsSUFBSSxFQUFFLE1BSEM7QUFJUEMsUUFBQUEsS0FBSyxFQUFFLENBQ0w7QUFBRUMsVUFBQUEsR0FBRyxFQUFHLEdBQUdaLFVBQVkseUJBQXZCO0FBQWlEYSxVQUFBQSxPQUFPLEVBQUU7QUFBMUQsU0FESyxFQUVMO0FBQUVELFVBQUFBLEdBQUcsRUFBRyxHQUFHWixVQUFZLHlCQUF2QjtBQUFpRGEsVUFBQUEsT0FBTyxFQUFFO0FBQTFELFNBRkssQ0FKQTtBQVFQQyxRQUFBQSxRQUFRLEVBQUUsSUFSSDtBQVNQQyxRQUFBQSxTQUFTLEVBQUU7QUFUSjtBQUZHLEtBQUQsRUFhVjtBQUNEVCxNQUFBQSxXQUFXLEVBQUUsc0NBRFo7QUFFREMsTUFBQUEsT0FBTyxFQUFFO0FBQ1BDLFFBQUFBLEtBQUssRUFBRSxtQkFEQTtBQUVQQyxRQUFBQSxRQUFRLEVBQUUsWUFGSDtBQUdQQyxRQUFBQSxJQUFJLEVBQUUsMENBSEM7QUFJUEMsUUFBQUEsS0FBSyxFQUFFLENBQ0w7QUFBRUMsVUFBQUEsR0FBRyxFQUFHLEdBQUdaLFVBQVksbUJBQXZCO0FBQTJDYSxVQUFBQSxPQUFPLEVBQUU7QUFBcEQsU0FESyxFQUVMO0FBQUVELFVBQUFBLEdBQUcsRUFBRyxHQUFHWixVQUFZLG1CQUF2QjtBQUEyQ2EsVUFBQUEsT0FBTyxFQUFFO0FBQXBELFNBRkssQ0FKQTtBQVFQQyxRQUFBQSxRQUFRLEVBQUUsSUFSSDtBQVNQQyxRQUFBQSxTQUFTLEVBQUU7QUFUSjtBQUZSLEtBYlUsRUEwQlY7QUFDRFQsTUFBQUEsV0FBVyxFQUFFLHNDQURaO0FBRURDLE1BQUFBLE9BQU8sRUFBRTtBQUNQQyxRQUFBQSxLQUFLLEVBQUUsZ0JBREE7QUFFUEMsUUFBQUEsUUFBUSxFQUFFLGFBRkg7QUFHUEMsUUFBQUEsSUFBSSxFQUFFLDZDQUhDO0FBSVBDLFFBQUFBLEtBQUssRUFBRSxDQUNMO0FBQUVDLFVBQUFBLEdBQUcsRUFBRyxHQUFHWixVQUFZLG1CQUF2QjtBQUEyQ2EsVUFBQUEsT0FBTyxFQUFFO0FBQXBELFNBREssRUFFTDtBQUFFRCxVQUFBQSxHQUFHLEVBQUcsR0FBR1osVUFBWSxtQkFBdkI7QUFBMkNhLFVBQUFBLE9BQU8sRUFBRTtBQUFwRCxTQUZLLENBSkE7QUFRUEcsUUFBQUEsS0FBSyxFQUFFO0FBQUVKLFVBQUFBLEdBQUcsRUFBRyxHQUFHWixVQUFZO0FBQXZCLFNBUkE7QUFTUGMsUUFBQUEsUUFBUSxFQUFFLElBVEg7QUFVUEMsUUFBQUEsU0FBUyxFQUFFO0FBVko7QUFGUixLQTFCVTtBQUZZLEdBQXJCLENBQU47QUE0Q0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUdXJuQ29udGV4dCB9IGZyb20gJ2JvdGJ1aWxkZXInO1xuXG5jb25zdCBuYW1lID0gJ011bHRpcGxlIG1lZGlhIGF0dGFjaG1lbnRzJztcblxuZnVuY3Rpb24gaGVscCgpIHtcbiAgcmV0dXJuIHtcbiAgICAnY29udGVudC1tdWx0aW1lZGlhJzogJ1Nob3cgYW5pbWF0aW9uLCBhdWRpbywgYW5kIHZpZGVvIGF0dGFjaG1lbnRzIGluIGEgc2luZ2xlIG1lc3NhZ2UnXG4gIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHByb2Nlc3Nvcihjb250ZXh0OiBUdXJuQ29udGV4dCkge1xuICBjb25zdCB7IFBVQkxJQ19VUkwgfSA9IHByb2Nlc3MuZW52O1xuXG4gIGF3YWl0IGNvbnRleHQuc2VuZEFjdGl2aXR5KHtcbiAgICB0eXBlOiAnbWVzc2FnZScsXG4gICAgYXR0YWNobWVudHM6IFt7XG4gICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQuY2FyZC5hbmltYXRpb24nLFxuICAgICAgY29udGVudDoge1xuICAgICAgICB0aXRsZTogJ011bHRpbWVkaWEgQ29udGVudCcsXG4gICAgICAgIHN1YnRpdGxlOiAnU3VidGl0bGUnLFxuICAgICAgICB0ZXh0OiAnVGV4dCcsXG4gICAgICAgIG1lZGlhOiBbXG4gICAgICAgICAgeyB1cmw6IGAkeyBQVUJMSUNfVVJMIH1hc3NldHMvc3VyZmFjZV9hbmltLmdpZmAsIHByb2ZpbGU6ICdhbmltYXRpb24nIH0sXG4gICAgICAgICAgeyB1cmw6IGAkeyBQVUJMSUNfVVJMIH1hc3NldHMvc3VyZmFjZV9hbmltLmdpZmAsIHByb2ZpbGU6ICdhbmltYXRpb24yJyB9XG4gICAgICAgIF0sXG4gICAgICAgIGF1dG9sb29wOiB0cnVlLFxuICAgICAgICBhdXRvc3RhcnQ6IHRydWVcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQuY2FyZC5hdWRpbycsXG4gICAgICBjb250ZW50OiB7XG4gICAgICAgIHRpdGxlOiAnQm90RnJhbWV3b3JrIFRlc3QnLFxuICAgICAgICBzdWJ0aXRsZTogJ2F1ZGlvIHRlc3QnLFxuICAgICAgICB0ZXh0OiAnTm8gYnV0dG9ucywgTm8gSW1hZ2UsIEF1dG9sb29wLCBTaGFyYWJsZScsXG4gICAgICAgIG1lZGlhOiBbXG4gICAgICAgICAgeyB1cmw6IGAkeyBQVUJMSUNfVVJMIH1hc3NldHMvYmZ0ZXN0Lm1wM2AsIHByb2ZpbGU6ICdhdWRpb2NhcmQnIH0sXG4gICAgICAgICAgeyB1cmw6IGAkeyBQVUJMSUNfVVJMIH1hc3NldHMvYmZ0ZXN0Lm1wM2AsIHByb2ZpbGU6ICdhdWRpb2NhcmQyJyB9XG4gICAgICAgIF0sXG4gICAgICAgIGF1dG9sb29wOiB0cnVlLFxuICAgICAgICBhdXRvc3RhcnQ6IGZhbHNlXG4gICAgICB9XG4gICAgfSwge1xuICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi92bmQubWljcm9zb2Z0LmNhcmQudmlkZW8nLFxuICAgICAgY29udGVudDoge1xuICAgICAgICB0aXRsZTogJ01pY3Jvc29mdCBCYW5kJyxcbiAgICAgICAgc3VidGl0bGU6ICdMYXJnZSBWaWRlbycsXG4gICAgICAgIHRleHQ6ICdObyBidXR0b25zLCBObyBJbWFnZSwgQXV0b2xvb3AsIE5vIFNoYXJhYmxlJyxcbiAgICAgICAgbWVkaWE6IFtcbiAgICAgICAgICB7IHVybDogYCR7IFBVQkxJQ19VUkwgfWFzc2V0cy9tc2JhbmQubXA0YCwgcHJvZmlsZTogJ3ZpZGVvY2FyZCcgfSxcbiAgICAgICAgICB7IHVybDogYCR7IFBVQkxJQ19VUkwgfWFzc2V0cy9tc2JhbmQubXA0YCwgcHJvZmlsZTogJ3ZpZGVvY2FyZDInIH1cbiAgICAgICAgXSxcbiAgICAgICAgaW1hZ2U6IHsgdXJsOiBgJHsgUFVCTElDX1VSTCB9YXNzZXRzL21zLWJhbmQxLmpwZ2AgfSxcbiAgICAgICAgYXV0b2xvb3A6IHRydWUsXG4gICAgICAgIGF1dG9zdGFydDogZmFsc2VcbiAgICAgIH1cbiAgICB9XVxuICB9KTtcbn1cblxuZXhwb3J0IHsgaGVscCwgbmFtZSwgcHJvY2Vzc29yIH1cbiJdfQ==